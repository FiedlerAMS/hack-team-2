<script>
    var map;
    function initMap() {
        var mapElement = document.getElementById('map');

        map = new google.maps.Map(mapElement, {
            zoom: parseInt({$zoom}),
            center: {$center|noescape},
            streetViewControl: false,
            fullscreenControl: false,
            mapTypeControlOptions: {
                position: google.maps.ControlPosition.RIGHT_BOTTOM
            },
            zoomControlOptions: {
                position: google.maps.ControlPosition.RIGHT_CENTER
            }
        });
        var iw = new google.maps.InfoWindow();
        var markerList = {};
        var snappedCoordinates = [];

        var records = {$records|noescape};
        console.log(records);
        for (var ri = 0; ri < records.length; ri++){
            var road = records[ri];
            var directPolyline = new google.maps.Polyline({
                strokeColor: road.color,
                strokeOpacity: 1,
                strokeWeight: 2
            });
            for (var rp = 0; rp < road.points.length; rp++) {
                var point = road.points[rp];
                (function(){
                    var latLng = new google.maps.LatLng(parseFloat(point.latitude), parseFloat(point.longitude));
                    var path = directPolyline.getPath();
                    path.push(latLng);
                    
//                    var markerData = point;
//                    var markerImageHtml = markerData.image ? '<img src="' + markerData.image + '" alt="' + markerData.title + '"/>' : '';
//                    var marker = new google.maps.Marker({
//                        position: latLng,
//                        icon: markerData.marker,
//                        optimized: false,
//                        map: map,
//                        title: markerData.title,
//                        draggable: false,
//                        animation: google.maps.Animation.DROP,
//                        desc: markerData.title
//                    });
                })();
            }
            directPolyline.setMap(map);
            console.log(directPolyline);
        }

        roads(map);
//        runSnapToRoad(directPolyline.getPath());

        // Snap a user-created polyline to roads and draw the snapped path
        function runSnapToRoad(path) {
            var splitted = 0;
            var counter = 0;
            var pathValues = [];
            for (var i = 0; i < path.getLength(); i++) {
                if (!Array.isArray(pathValues[splitted])) {
                    pathValues[splitted] = [];
                }

                pathValues[splitted].push(path.getAt(i).toUrlValue());
                counter++;
                if (counter >= 100) {
                    splitted++;
                    counter = 0;
                }
            }

            var funcs = [];
            for (var j = 0; j < pathValues.length; j++) {
                var genFunc = (function(data){
                    return $.get('https://roads.googleapis.com/v1/snapToRoads', {
                        interpolate: true,
                        key: {$googleApiKey},
                        path: data.join('|')
                    });
                })(pathValues[j]);
                funcs.push(genFunc);
            }

            $.when.apply($, funcs).done(function(){
                for (var i = 0; i < arguments.length; i++) {
                    processSnapToRoadResponse(arguments[i][0]);
                }
                drawSnappedPolyline();
            });
        }
    
        // Store snapped polyline returned by the snap-to-road service.
        function processSnapToRoadResponse(data) {
            for (var i = 0; i < data.snappedPoints.length; i++) {
                var latlng = new google.maps.LatLng(
                    data.snappedPoints[i].location.latitude,
                    data.snappedPoints[i].location.longitude
                );
                snappedCoordinates.push(latlng);
            }
        }
    
        // Draws the snapped polyline (after processing snap-to-road response).
        function drawSnappedPolyline() {
            var snappedPolyline = new google.maps.Polyline({
                path: snappedCoordinates,
                strokeColor: '#00FF00',
                strokeWeight: 3
            });
            snappedPolyline.setMap(map);
        }
    }
    
    var roads = function(map) {
        
        var avgBusSpeed = 16.6666; // m/s = 60km/h
        
        var lineSymbol = {
            path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
            scale: 3,
            strokeColor: '#393'
        };

        var line = new google.maps.Polyline({
            path: [{
                    lat: 51.4700,
                    lng: 0.4543
                }, {
                    lat: 50.1109,
                    lng: 8.6821
                }],
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 0.5,
            icons: [{
                    icon: lineSymbol,
                    offset: '100%'
                }],
            map: map
        });

        animateCircle(line, 1000);

        /**
         * @param line GMap PolyLine
         * @param pathLenght length in meters
         */
        function animateCircle(line, pathLenght) {
            var count = 0;
            var steps = parseInt(pathLenght / avgBusSpeed);
            var animationInterval = window.setInterval(function () {
                count = (count + 1);
                var icons = line.get('icons');
                icons[0].offset = (count / (steps / 100) ) + '%';
                line.set('icons', icons);
                console.log(count);
                if (count >= steps) {
                    clearInterval(animationInterval);
                }
            }, 1000); // animation speed
        }
    };
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key={$googleApiKey}&callback=initMap"></script>
